#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
require("source-map-support/register");
const cdk = require("@aws-cdk/core");
const cdk_stackset_admin_role_stack_1 = require("../lib/cdk-stackset-admin-role-stack");
const cdk_stackset_exec_role_stack_1 = require("../lib/cdk-stackset-exec-role-stack");
const cdk_devopsguru_multi_acc_reg_stack_1 = require("../lib/cdk-devopsguru-multi-acc-reg-stack");
const cdk_devopsguru_multi_acc_reg_spec_stack_1 = require("../lib/cdk-devopsguru-multi-acc-reg-spec-stack");
const cdk_devopsguru_org_uni_stack_1 = require("../lib/cdk-devopsguru-org-uni-stack");
const infrastructure_stack_1 = require("../lib/infrastructure-stack");
const app = new cdk.App();
new cdk_stackset_admin_role_stack_1.CdkStackSetAdminRole(app, 'CdkStackSetAdminRole', {
    description: 'CDK Stack for creating AWSCloudFormationStackSetAdministrationRole .'
});
new cdk_stackset_exec_role_stack_1.CdkStackSetExecutionRole(app, 'CdkStackSetExecRole', {
    description: 'CDK Stack for creating AWSCloudFormationStackSetExecutionRole.'
});
new cdk_devopsguru_multi_acc_reg_stack_1.CdkDevopsGuruStackMultiAccReg(app, 'CdkDevopsGuruStackMultiAccReg', {
    description: 'CDK Stack for enabling DevOps Guru Service for all stack resources across multiple accounts and regions.'
});
new cdk_devopsguru_multi_acc_reg_spec_stack_1.CdkDevopsGuruStackMultiAccRegSpecStacks(app, 'CdkDevopsGuruStackMultiAccRegSpecStacks', {
    description: 'CDK Stack for enabling DevOps Guru Service for specific stack resources across multiple accounts and regions.'
});
new cdk_devopsguru_org_uni_stack_1.CdkDevopsguruStackOrgUnit(app, 'CdkDevopsguruStackOrgUnit', {
    description: 'CDK Stack for enabling DevOps Guru Service for all stack resources across Orgnizational Units (OU).'
});
new infrastructure_stack_1.CdkInfrastructureStack(app, 'CdkInfrastructureStack', {
    description: 'CDK Stack for deploying sample serverless application.'
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2RrLWRldm9wc2d1cnUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJjZGstZGV2b3BzZ3VydS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7QUFDQSx1Q0FBcUM7QUFDckMscUNBQXFDO0FBQ3JDLHdGQUE0RTtBQUM1RSxzRkFBK0U7QUFDL0Usa0dBQTBGO0FBQzFGLDRHQUF5RztBQUN6RyxzRkFBZ0Y7QUFDaEYsc0VBQXFFO0FBRXJFLE1BQU0sR0FBRyxHQUFHLElBQUksR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDO0FBRTFCLElBQUksb0RBQW9CLENBQUMsR0FBRyxFQUFDLHNCQUFzQixFQUFFO0lBQ25ELFdBQVcsRUFBRyxzRUFBc0U7Q0FDckYsQ0FBQyxDQUFDO0FBRUgsSUFBSSx1REFBd0IsQ0FBQyxHQUFHLEVBQUMscUJBQXFCLEVBQUU7SUFDdEQsV0FBVyxFQUFHLGdFQUFnRTtDQUM5RSxDQUFDLENBQUM7QUFFSixJQUFJLGtFQUE2QixDQUFDLEdBQUcsRUFBRSwrQkFBK0IsRUFBRTtJQUN0RSxXQUFXLEVBQUcsMEdBQTBHO0NBQ3hILENBQUMsQ0FBQztBQUVKLElBQUksaUZBQXVDLENBQUMsR0FBRyxFQUFDLHlDQUF5QyxFQUFFO0lBQ3pGLFdBQVcsRUFBRywrR0FBK0c7Q0FDN0gsQ0FBQyxDQUFDO0FBRUosSUFBSSx3REFBeUIsQ0FBQyxHQUFHLEVBQUMsMkJBQTJCLEVBQUU7SUFDN0QsV0FBVyxFQUFHLHFHQUFxRztDQUNuSCxDQUFDLENBQUM7QUFFSixJQUFJLDZDQUFzQixDQUFDLEdBQUcsRUFBQyx3QkFBd0IsRUFBRTtJQUN2RCxXQUFXLEVBQUcsd0RBQXdEO0NBQ3ZFLENBQUMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIiMhL3Vzci9iaW4vZW52IG5vZGVcbmltcG9ydCAnc291cmNlLW1hcC1zdXBwb3J0L3JlZ2lzdGVyJztcbmltcG9ydCAqIGFzIGNkayBmcm9tICdAYXdzLWNkay9jb3JlJztcbmltcG9ydCB7IENka1N0YWNrU2V0QWRtaW5Sb2xlIH0gZnJvbSAnLi4vbGliL2Nkay1zdGFja3NldC1hZG1pbi1yb2xlLXN0YWNrJztcbmltcG9ydCB7IENka1N0YWNrU2V0RXhlY3V0aW9uUm9sZSB9IGZyb20gJy4uL2xpYi9jZGstc3RhY2tzZXQtZXhlYy1yb2xlLXN0YWNrJztcbmltcG9ydCB7IENka0Rldm9wc0d1cnVTdGFja011bHRpQWNjUmVnIH0gZnJvbSAnLi4vbGliL2Nkay1kZXZvcHNndXJ1LW11bHRpLWFjYy1yZWctc3RhY2snO1xuaW1wb3J0IHsgQ2RrRGV2b3BzR3VydVN0YWNrTXVsdGlBY2NSZWdTcGVjU3RhY2tzIH0gZnJvbSAnLi4vbGliL2Nkay1kZXZvcHNndXJ1LW11bHRpLWFjYy1yZWctc3BlYy1zdGFjayc7XG5pbXBvcnQgeyBDZGtEZXZvcHNndXJ1U3RhY2tPcmdVbml0IH0gZnJvbSAnLi4vbGliL2Nkay1kZXZvcHNndXJ1LW9yZy11bmktc3RhY2snO1xuaW1wb3J0IHsgQ2RrSW5mcmFzdHJ1Y3R1cmVTdGFjayB9IGZyb20gJy4uL2xpYi9pbmZyYXN0cnVjdHVyZS1zdGFjayc7XG5cbmNvbnN0IGFwcCA9IG5ldyBjZGsuQXBwKCk7XG5cbm5ldyBDZGtTdGFja1NldEFkbWluUm9sZShhcHAsJ0Nka1N0YWNrU2V0QWRtaW5Sb2xlJywgeyBcbiAgZGVzY3JpcHRpb24gOiAnQ0RLIFN0YWNrIGZvciBjcmVhdGluZyBBV1NDbG91ZEZvcm1hdGlvblN0YWNrU2V0QWRtaW5pc3RyYXRpb25Sb2xlIC4nXG59KTtcblxubmV3IENka1N0YWNrU2V0RXhlY3V0aW9uUm9sZShhcHAsJ0Nka1N0YWNrU2V0RXhlY1JvbGUnLCB7XG4gIGRlc2NyaXB0aW9uIDogJ0NESyBTdGFjayBmb3IgY3JlYXRpbmcgQVdTQ2xvdWRGb3JtYXRpb25TdGFja1NldEV4ZWN1dGlvblJvbGUuJ1xuIH0pO1xuXG5uZXcgQ2RrRGV2b3BzR3VydVN0YWNrTXVsdGlBY2NSZWcoYXBwLCAnQ2RrRGV2b3BzR3VydVN0YWNrTXVsdGlBY2NSZWcnLCB7XG4gIGRlc2NyaXB0aW9uIDogJ0NESyBTdGFjayBmb3IgZW5hYmxpbmcgRGV2T3BzIEd1cnUgU2VydmljZSBmb3IgYWxsIHN0YWNrIHJlc291cmNlcyBhY3Jvc3MgbXVsdGlwbGUgYWNjb3VudHMgYW5kIHJlZ2lvbnMuJ1xuIH0pO1xuXG5uZXcgQ2RrRGV2b3BzR3VydVN0YWNrTXVsdGlBY2NSZWdTcGVjU3RhY2tzKGFwcCwnQ2RrRGV2b3BzR3VydVN0YWNrTXVsdGlBY2NSZWdTcGVjU3RhY2tzJywge1xuICBkZXNjcmlwdGlvbiA6ICdDREsgU3RhY2sgZm9yIGVuYWJsaW5nIERldk9wcyBHdXJ1IFNlcnZpY2UgZm9yIHNwZWNpZmljIHN0YWNrIHJlc291cmNlcyBhY3Jvc3MgbXVsdGlwbGUgYWNjb3VudHMgYW5kIHJlZ2lvbnMuJ1xuIH0pO1xuXG5uZXcgQ2RrRGV2b3BzZ3VydVN0YWNrT3JnVW5pdChhcHAsJ0Nka0Rldm9wc2d1cnVTdGFja09yZ1VuaXQnLCB7XG4gIGRlc2NyaXB0aW9uIDogJ0NESyBTdGFjayBmb3IgZW5hYmxpbmcgRGV2T3BzIEd1cnUgU2VydmljZSBmb3IgYWxsIHN0YWNrIHJlc291cmNlcyBhY3Jvc3MgT3Jnbml6YXRpb25hbCBVbml0cyAoT1UpLidcbiB9KTtcblxubmV3IENka0luZnJhc3RydWN0dXJlU3RhY2soYXBwLCdDZGtJbmZyYXN0cnVjdHVyZVN0YWNrJywgeyBcbiAgZGVzY3JpcHRpb24gOiAnQ0RLIFN0YWNrIGZvciBkZXBsb3lpbmcgc2FtcGxlIHNlcnZlcmxlc3MgYXBwbGljYXRpb24uJ1xufSk7Il19